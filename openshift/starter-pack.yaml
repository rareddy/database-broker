apiVersion: v1
kind: Template
metadata:
  name: database-broker
objects:

- apiVersion: servicecatalog.k8s.io/v1beta1
  kind: ClusterServiceBroker
  metadata:
    name: database-broker
  spec:
    url: http://database-broker.database-broker.svc.cluster.local
    relistBehavior: Duration
    relistDuration: 1m0s

- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: database-broker
    namespace: database-broker

- kind: Service
  apiVersion: v1
  metadata:
    name: database-broker
    labels:
      app: database-broker
  spec:
    selector:
      app: database-broker
    ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

- kind: ClusterRoleBinding
  apiVersion: rbac.authorization.k8s.io/v1beta1
  metadata:
    name: database-broker
  groupNames:
  subjects:
  - kind: ServiceAccount
    name: database-broker
    namespace: database-broker
  roleRef:
    name: admin
    kind: ClusterRole
    apiGroup: rbac.authorization.k8s.io

- kind: Deployment
  apiVersion: extensions/v1beta1
  metadata:
    name: database-broker
    labels:
      app: database-broker
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: database-broker
    template:
      metadata:
        labels:
          app: database-broker
      spec:
        serviceAccountName: database-broker
        containers:
        - name: service-database-broker
          image: ${IMAGE}
          imagePullPolicy: Always
          command:
          - /opt/servicebroker/servicebroker
          args:
          - --port
          - "8080"
          ports:
          - containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: 8080
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            tcpSocket:
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2

parameters:
- description: Name of the image to use
  displayName: Image name
  name: IMAGE
  required: true
  value: teiid/database-broker:latest
